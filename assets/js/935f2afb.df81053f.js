"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Getting Started","href":"/jetl/docs/getting-started","docId":"getting-started"},{"type":"category","label":"Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Pipelines","href":"/jetl/docs/concepts/pipelines","docId":"concepts/pipelines"},{"type":"link","label":"Operations","href":"/jetl/docs/concepts/operations","docId":"concepts/operations"},{"type":"link","label":"Operators","href":"/jetl/docs/concepts/operators","docId":"concepts/operators"},{"type":"link","label":"Generators","href":"/jetl/docs/concepts/generators","docId":"concepts/generators"},{"type":"link","label":"Lazy Execution","href":"/jetl/docs/concepts/lazy-execution","docId":"concepts/lazy-execution"}]},{"type":"category","label":"API","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Modules","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"generators","href":"/jetl/docs/api/modules/generators","docId":"api/modules/generators"},{"type":"link","label":"operations","href":"/jetl/docs/api/modules/operations","docId":"api/modules/operations"},{"type":"link","label":"operators","href":"/jetl/docs/api/modules/operators","docId":"api/modules/operators"},{"type":"link","label":"pipeline","href":"/jetl/docs/api/modules/pipeline","docId":"api/modules/pipeline"},{"type":"link","label":"types","href":"/jetl/docs/api/modules/types","docId":"api/modules/types"}]},{"type":"category","label":"Classes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"pipeline","href":"/jetl/docs/api/classes/pipeline.pipeline-1","docId":"api/classes/pipeline.pipeline-1"}]},{"type":"category","label":"Interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"MatchCondition","href":"/jetl/docs/api/interfaces/types.MatchCondition","docId":"api/interfaces/types.MatchCondition"},{"type":"link","label":"MergeOperation","href":"/jetl/docs/api/interfaces/types.MergeOperation","docId":"api/interfaces/types.MergeOperation"},{"type":"link","label":"Operation","href":"/jetl/docs/api/interfaces/types.Operation","docId":"api/interfaces/types.Operation"}]}],"href":"/jetl/docs/api/"}]},"docs":{"api/classes/pipeline.pipeline-1":{"id":"api/classes/pipeline.pipeline-1","title":"Class: pipeline<T>","description":"pipeline.pipeline","sidebar":"tutorialSidebar"},"api/index":{"id":"api/index","title":"jetl","description":"Modules","sidebar":"tutorialSidebar"},"api/interfaces/types.MatchCondition":{"id":"api/interfaces/types.MatchCondition","title":"Interface: MatchCondition<A, B>","description":"types.MatchCondition","sidebar":"tutorialSidebar"},"api/interfaces/types.MergeOperation":{"id":"api/interfaces/types.MergeOperation","title":"Interface: MergeOperation<L, R, TResult>","description":"types.MergeOperation","sidebar":"tutorialSidebar"},"api/interfaces/types.Operation":{"id":"api/interfaces/types.Operation","title":"Interface: Operation<T, TResult>","description":"types.Operation","sidebar":"tutorialSidebar"},"api/modules/generators":{"id":"api/modules/generators","title":"Module: generators","description":"Functions","sidebar":"tutorialSidebar"},"api/modules/operations":{"id":"api/modules/operations","title":"Module: operations","description":"Functions","sidebar":"tutorialSidebar"},"api/modules/operators":{"id":"api/modules/operators","title":"Module: operators","description":"Functions","sidebar":"tutorialSidebar"},"api/modules/pipeline":{"id":"api/modules/pipeline","title":"Module: pipeline","description":"Classes","sidebar":"tutorialSidebar"},"api/modules/types":{"id":"api/modules/types","title":"Module: types","description":"Interfaces","sidebar":"tutorialSidebar"},"concepts/generators":{"id":"concepts/generators","title":"Generators","description":"Generators are functions which create async iterables from other values.","sidebar":"tutorialSidebar"},"concepts/lazy-execution":{"id":"concepts/lazy-execution","title":"Lazy Execution","description":"When operations are added to a pipeline, they are pushed into an internal data structure but they are not executed until the pipeline\'s run() method is invoked.","sidebar":"tutorialSidebar"},"concepts/operations":{"id":"concepts/operations","title":"Operations","description":"Operations represent the stages of a pipeline. An operation is a function which accepts iterables as inputs and returns iterables as output, so they can be processed by the next stage of the pipeline.","sidebar":"tutorialSidebar"},"concepts/operators":{"id":"concepts/operators","title":"Operators","description":"Operators are functions which accept iterables as input and can turn them into anything else.","sidebar":"tutorialSidebar"},"concepts/pipelines":{"id":"concepts/pipelines","title":"Pipelines","description":"A pipeline is the glue which ties all together. Each stage of a pipeline is a function which accepts iterables and returns iterables, to be consumed by the next stage.","sidebar":"tutorialSidebar"},"getting-started":{"id":"getting-started","title":"Getting Started","description":"jetl is a data processing library for JavaScript built on top of asynchronous iterators.","sidebar":"tutorialSidebar"}}}')}}]);